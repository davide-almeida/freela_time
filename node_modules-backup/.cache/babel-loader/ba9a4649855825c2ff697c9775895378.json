{"ast":null,"code":"//\n// Charts\n//\n'use strict';\n\nvar Charts = function () {\n  // Variable\n  var $toggle = $('[data-toggle=\"chart\"]');\n  var mode = 'light'; //(themeMode) ? themeMode : 'light';\n\n  var fonts = {\n    base: 'Open Sans'\n  }; // Colors\n\n  var colors = {\n    gray: {\n      100: '#f6f9fc',\n      200: '#e9ecef',\n      300: '#dee2e6',\n      400: '#ced4da',\n      500: '#adb5bd',\n      600: '#8898aa',\n      700: '#525f7f',\n      800: '#32325d',\n      900: '#212529'\n    },\n    theme: {\n      'default': '#172b4d',\n      'primary': '#5e72e4',\n      'secondary': '#f4f5f7',\n      'info': '#11cdef',\n      'success': '#2dce89',\n      'danger': '#f5365c',\n      'warning': '#fb6340'\n    },\n    black: '#12263F',\n    white: '#FFFFFF',\n    transparent: 'transparent'\n  }; // Methods\n  // Chart.js global options\n\n  function chartOptions() {\n    // Options\n    var options = {\n      defaults: {\n        global: {\n          responsive: true,\n          maintainAspectRatio: false,\n          defaultColor: mode == 'dark' ? colors.gray[700] : colors.gray[600],\n          defaultFontColor: mode == 'dark' ? colors.gray[700] : colors.gray[600],\n          defaultFontFamily: fonts.base,\n          defaultFontSize: 13,\n          layout: {\n            padding: 0\n          },\n          legend: {\n            display: false,\n            position: 'bottom',\n            labels: {\n              usePointStyle: true,\n              padding: 16\n            }\n          },\n          elements: {\n            point: {\n              radius: 0,\n              backgroundColor: colors.theme['primary']\n            },\n            line: {\n              tension: .4,\n              borderWidth: 4,\n              borderColor: colors.theme['primary'],\n              backgroundColor: colors.transparent,\n              borderCapStyle: 'rounded'\n            },\n            rectangle: {\n              backgroundColor: colors.theme['warning']\n            },\n            arc: {\n              backgroundColor: colors.theme['primary'],\n              borderColor: mode == 'dark' ? colors.gray[800] : colors.white,\n              borderWidth: 4\n            }\n          },\n          tooltips: {\n            enabled: true,\n            mode: 'index',\n            intersect: false\n          }\n        },\n        doughnut: {\n          cutoutPercentage: 83,\n          legendCallback: function legendCallback(chart) {\n            var data = chart.data;\n            var content = '';\n            data.labels.forEach(function (label, index) {\n              var bgColor = data.datasets[0].backgroundColor[index];\n              content += '<span class=\"chart-legend-item\">';\n              content += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\n              content += label;\n              content += '</span>';\n            });\n            return content;\n          }\n        }\n      }\n    }; // yAxes\n\n    Chart.scaleService.updateScaleDefaults('linear', {\n      gridLines: {\n        borderDash: [2],\n        borderDashOffset: [2],\n        color: mode == 'dark' ? colors.gray[900] : colors.gray[300],\n        drawBorder: false,\n        drawTicks: false,\n        drawOnChartArea: true,\n        zeroLineWidth: 0,\n        zeroLineColor: 'rgba(0,0,0,0)',\n        zeroLineBorderDash: [2],\n        zeroLineBorderDashOffset: [2]\n      },\n      ticks: {\n        beginAtZero: true,\n        padding: 10,\n        callback: function callback(value) {\n          if (!(value % 10)) {\n            return value;\n          }\n        }\n      }\n    }); // xAxes\n\n    Chart.scaleService.updateScaleDefaults('category', {\n      gridLines: {\n        drawBorder: false,\n        drawOnChartArea: false,\n        drawTicks: false\n      },\n      ticks: {\n        padding: 20\n      },\n      maxBarThickness: 10\n    });\n    return options;\n  } // Parse global options\n\n\n  function parseOptions(parent, options) {\n    for (var item in options) {\n      if (typeof options[item] !== 'object') {\n        parent[item] = options[item];\n      } else {\n        parseOptions(parent[item], options[item]);\n      }\n    }\n  } // Push options\n\n\n  function pushOptions(parent, options) {\n    for (var item in options) {\n      if (Array.isArray(options[item])) {\n        options[item].forEach(function (data) {\n          parent[item].push(data);\n        });\n      } else {\n        pushOptions(parent[item], options[item]);\n      }\n    }\n  } // Pop options\n\n\n  function popOptions(parent, options) {\n    for (var item in options) {\n      if (Array.isArray(options[item])) {\n        options[item].forEach(function (data) {\n          parent[item].pop();\n        });\n      } else {\n        popOptions(parent[item], options[item]);\n      }\n    }\n  } // Toggle options\n\n\n  function toggleOptions(elem) {\n    var options = elem.data('add');\n    var $target = $(elem.data('target'));\n    var $chart = $target.data('chart');\n\n    if (elem.is(':checked')) {\n      // Add options\n      pushOptions($chart, options); // Update chart\n\n      $chart.update();\n    } else {\n      // Remove options\n      popOptions($chart, options); // Update chart\n\n      $chart.update();\n    }\n  } // Update options\n\n\n  function updateOptions(elem) {\n    var options = elem.data('update');\n    var $target = $(elem.data('target'));\n    var $chart = $target.data('chart'); // Parse options\n\n    parseOptions($chart, options); // Toggle ticks\n\n    toggleTicks(elem, $chart); // Update chart\n\n    $chart.update();\n  } // Toggle ticks\n\n\n  function toggleTicks(elem, $chart) {\n    if (elem.data('prefix') !== undefined || elem.data('prefix') !== undefined) {\n      var prefix = elem.data('prefix') ? elem.data('prefix') : '';\n      var suffix = elem.data('suffix') ? elem.data('suffix') : ''; // Update ticks\n\n      $chart.options.scales.yAxes[0].ticks.callback = function (value) {\n        if (!(value % 10)) {\n          return prefix + value + suffix;\n        }\n      }; // Update tooltips\n\n\n      $chart.options.tooltips.callbacks.label = function (item, data) {\n        var label = data.datasets[item.datasetIndex].label || '';\n        var yLabel = item.yLabel;\n        var content = '';\n\n        if (data.datasets.length > 1) {\n          content += '<span class=\"popover-body-label mr-auto\">' + label + '</span>';\n        }\n\n        content += '<span class=\"popover-body-value\">' + prefix + yLabel + suffix + '</span>';\n        return content;\n      };\n    }\n  } // Events\n  // Parse global options\n\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  } // Toggle options\n\n\n  $toggle.on({\n    'change': function change() {\n      var $this = $(this);\n\n      if ($this.is('[data-add]')) {\n        toggleOptions($this);\n      }\n    },\n    'click': function click() {\n      var $this = $(this);\n\n      if ($this.is('[data-update]')) {\n        updateOptions($this);\n      }\n    }\n  }); // Return\n\n  return {\n    colors: colors,\n    fonts: fonts,\n    mode: mode\n  };\n}();","map":{"version":3,"sources":["/home/davide/code/tcc/freela_time/app/javascript/packs/app/components/init/chart-init.js"],"names":["Charts","$toggle","$","mode","fonts","base","colors","gray","theme","black","white","transparent","chartOptions","options","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","labels","usePointStyle","elements","point","radius","backgroundColor","line","tension","borderWidth","borderColor","borderCapStyle","rectangle","arc","tooltips","enabled","intersect","doughnut","cutoutPercentage","legendCallback","chart","data","content","forEach","label","index","bgColor","datasets","Chart","scaleService","updateScaleDefaults","gridLines","borderDash","borderDashOffset","color","drawBorder","drawTicks","drawOnChartArea","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","ticks","beginAtZero","callback","value","maxBarThickness","parseOptions","parent","item","pushOptions","Array","isArray","push","popOptions","pop","toggleOptions","elem","$target","$chart","is","update","updateOptions","toggleTicks","undefined","prefix","suffix","scales","yAxes","callbacks","datasetIndex","yLabel","length","window","on","$this"],"mappings":"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","sourcesContent":["//\n// Charts\n//\n\n'use strict';\n\nvar Charts = (function() {\n\n\t// Variable\n\n\tvar $toggle = $('[data-toggle=\"chart\"]');\n\tvar mode = 'light';//(themeMode) ? themeMode : 'light';\n\tvar fonts = {\n\t\tbase: 'Open Sans'\n\t}\n\n\t// Colors\n\tvar colors = {\n\t\tgray: {\n\t\t\t100: '#f6f9fc',\n\t\t\t200: '#e9ecef',\n\t\t\t300: '#dee2e6',\n\t\t\t400: '#ced4da',\n\t\t\t500: '#adb5bd',\n\t\t\t600: '#8898aa',\n\t\t\t700: '#525f7f',\n\t\t\t800: '#32325d',\n\t\t\t900: '#212529'\n\t\t},\n\t\ttheme: {\n\t\t\t'default': '#172b4d',\n\t\t\t'primary': '#5e72e4',\n\t\t\t'secondary': '#f4f5f7',\n\t\t\t'info': '#11cdef',\n\t\t\t'success': '#2dce89',\n\t\t\t'danger': '#f5365c',\n\t\t\t'warning': '#fb6340'\n\t\t},\n\t\tblack: '#12263F',\n\t\twhite: '#FFFFFF',\n\t\ttransparent: 'transparent',\n\t};\n\n\n\t// Methods\n\n\t// Chart.js global options\n\tfunction chartOptions() {\n\n\t\t// Options\n\t\tvar options = {\n\t\t\tdefaults: {\n\t\t\t\tglobal: {\n\t\t\t\t\tresponsive: true,\n\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\tdefaultColor: (mode == 'dark') ? colors.gray[700] : colors.gray[600],\n\t\t\t\t\tdefaultFontColor: (mode == 'dark') ? colors.gray[700] : colors.gray[600],\n\t\t\t\t\tdefaultFontFamily: fonts.base,\n\t\t\t\t\tdefaultFontSize: 13,\n\t\t\t\t\tlayout: {\n\t\t\t\t\t\tpadding: 0\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tusePointStyle: true,\n\t\t\t\t\t\t\tpadding: 16\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\telements: {\n\t\t\t\t\t\tpoint: {\n\t\t\t\t\t\t\tradius: 0,\n\t\t\t\t\t\t\tbackgroundColor: colors.theme['primary']\n\t\t\t\t\t\t},\n\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\ttension: .4,\n\t\t\t\t\t\t\tborderWidth: 4,\n\t\t\t\t\t\t\tborderColor: colors.theme['primary'],\n\t\t\t\t\t\t\tbackgroundColor: colors.transparent,\n\t\t\t\t\t\t\tborderCapStyle: 'rounded'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trectangle: {\n\t\t\t\t\t\t\tbackgroundColor: colors.theme['warning']\n\t\t\t\t\t\t},\n\t\t\t\t\t\tarc: {\n\t\t\t\t\t\t\tbackgroundColor: colors.theme['primary'],\n\t\t\t\t\t\t\tborderColor: (mode == 'dark') ? colors.gray[800] : colors.white,\n\t\t\t\t\t\t\tborderWidth: 4\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttooltips: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tmode: 'index',\n\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdoughnut: {\n\t\t\t\t\tcutoutPercentage: 83,\n\t\t\t\t\tlegendCallback: function(chart) {\n\t\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\t\tvar content = '';\n\n\t\t\t\t\t\tdata.labels.forEach(function(label, index) {\n\t\t\t\t\t\t\tvar bgColor = data.datasets[0].backgroundColor[index];\n\n\t\t\t\t\t\t\tcontent += '<span class=\"chart-legend-item\">';\n\t\t\t\t\t\t\tcontent += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\n\t\t\t\t\t\t\tcontent += label;\n\t\t\t\t\t\t\tcontent += '</span>';\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn content;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// yAxes\n\t\tChart.scaleService.updateScaleDefaults('linear', {\n\t\t\tgridLines: {\n\t\t\t\tborderDash: [2],\n\t\t\t\tborderDashOffset: [2],\n\t\t\t\tcolor: (mode == 'dark') ? colors.gray[900] : colors.gray[300],\n\t\t\t\tdrawBorder: false,\n\t\t\t\tdrawTicks: false,\n\t\t\t\tdrawOnChartArea: true,\n\t\t\t\tzeroLineWidth: 0,\n\t\t\t\tzeroLineColor: 'rgba(0,0,0,0)',\n\t\t\t\tzeroLineBorderDash: [2],\n\t\t\t\tzeroLineBorderDashOffset: [2]\n\t\t\t},\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: true,\n\t\t\t\tpadding: 10,\n\t\t\t\tcallback: function(value) {\n\t\t\t\t\tif (!(value % 10)) {\n\t\t\t\t\t\treturn value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// xAxes\n\t\tChart.scaleService.updateScaleDefaults('category', {\n\t\t\tgridLines: {\n\t\t\t\tdrawBorder: false,\n\t\t\t\tdrawOnChartArea: false,\n\t\t\t\tdrawTicks: false\n\t\t\t},\n\t\t\tticks: {\n\t\t\t\tpadding: 20\n\t\t\t},\n\t\t\tmaxBarThickness: 10\n\t\t});\n\n\t\treturn options;\n\n\t}\n\n\t// Parse global options\n\tfunction parseOptions(parent, options) {\n\t\tfor (var item in options) {\n\t\t\tif (typeof options[item] !== 'object') {\n\t\t\t\tparent[item] = options[item];\n\t\t\t} else {\n\t\t\t\tparseOptions(parent[item], options[item]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Push options\n\tfunction pushOptions(parent, options) {\n\t\tfor (var item in options) {\n\t\t\tif (Array.isArray(options[item])) {\n\t\t\t\toptions[item].forEach(function(data) {\n\t\t\t\t\tparent[item].push(data);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushOptions(parent[item], options[item]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Pop options\n\tfunction popOptions(parent, options) {\n\t\tfor (var item in options) {\n\t\t\tif (Array.isArray(options[item])) {\n\t\t\t\toptions[item].forEach(function(data) {\n\t\t\t\t\tparent[item].pop();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpopOptions(parent[item], options[item]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Toggle options\n\tfunction toggleOptions(elem) {\n\t\tvar options = elem.data('add');\n\t\tvar $target = $(elem.data('target'));\n\t\tvar $chart = $target.data('chart');\n\n\t\tif (elem.is(':checked')) {\n\n\t\t\t// Add options\n\t\t\tpushOptions($chart, options);\n\n\t\t\t// Update chart\n\t\t\t$chart.update();\n\t\t} else {\n\n\t\t\t// Remove options\n\t\t\tpopOptions($chart, options);\n\n\t\t\t// Update chart\n\t\t\t$chart.update();\n\t\t}\n\t}\n\n\t// Update options\n\tfunction updateOptions(elem) {\n\t\tvar options = elem.data('update');\n\t\tvar $target = $(elem.data('target'));\n\t\tvar $chart = $target.data('chart');\n\n\t\t// Parse options\n\t\tparseOptions($chart, options);\n\n\t\t// Toggle ticks\n\t\ttoggleTicks(elem, $chart);\n\n\t\t// Update chart\n\t\t$chart.update();\n\t}\n\n\t// Toggle ticks\n\tfunction toggleTicks(elem, $chart) {\n\n\t\tif (elem.data('prefix') !== undefined || elem.data('prefix') !== undefined) {\n\t\t\tvar prefix = elem.data('prefix') ? elem.data('prefix') : '';\n\t\t\tvar suffix = elem.data('suffix') ? elem.data('suffix') : '';\n\n\t\t\t// Update ticks\n\t\t\t$chart.options.scales.yAxes[0].ticks.callback = function(value) {\n\t\t\t\tif (!(value % 10)) {\n\t\t\t\t\treturn prefix + value + suffix;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update tooltips\n\t\t\t$chart.options.tooltips.callbacks.label = function(item, data) {\n\t\t\t\tvar label = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar yLabel = item.yLabel;\n\t\t\t\tvar content = '';\n\n\t\t\t\tif (data.datasets.length > 1) {\n\t\t\t\t\tcontent += '<span class=\"popover-body-label mr-auto\">' + label + '</span>';\n\t\t\t\t}\n\n\t\t\t\tcontent += '<span class=\"popover-body-value\">' + prefix + yLabel + suffix + '</span>';\n\t\t\t\treturn content;\n\t\t\t}\n\n\t\t}\n\t}\n\n\n\t// Events\n\n\t// Parse global options\n\tif (window.Chart) {\n\t\tparseOptions(Chart, chartOptions());\n\t}\n\n\t// Toggle options\n\t$toggle.on({\n\t\t'change': function() {\n\t\t\tvar $this = $(this);\n\n\t\t\tif ($this.is('[data-add]')) {\n\t\t\t\ttoggleOptions($this);\n\t\t\t}\n\t\t},\n\t\t'click': function() {\n\t\t\tvar $this = $(this);\n\n\t\t\tif ($this.is('[data-update]')) {\n\t\t\t\tupdateOptions($this);\n\t\t\t}\n\t\t}\n\t});\n\n\n\t// Return\n\n\treturn {\n\t\tcolors: colors,\n\t\tfonts: fonts,\n\t\tmode: mode\n\t};\n\n})();\n"]},"metadata":{},"sourceType":"module"}